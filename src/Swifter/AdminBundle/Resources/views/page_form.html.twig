{% extends "SwifterAdminBundle::loggedin_skeleton.html.twig" %}

{%  block main_content %}
    <div class="box-content">
        <div style="display:table; width:100%">
            <div style="display:table-cell; width:30%">
                <form class="form-inline" data-bind="with: page">
                    <div class="control-group">
                        <label class="control-label" for="name">Name</label>
                        <div class="controls">
                            <input class="input-xlarge focused" type="text" data-bind="value: name"/>
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="uri">Uri</label>
                        <div class="controls">
                            <div class="input-prepend">
                                <span class="add-on">/swifter/</span>
                                <input type="text" size="16" data-bind="value: uri"/>
                            </div>
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="parent">Parent Page</label>
                        <div class="controls" data-bind="with: parent">
                            <select data-rel="chosen" data-bind="
                                options: $parents[1].availableParents,
                                optionsText: 'name',
                                optionsValue: 'id',
                                value: id,
                                optionsCaption: 'Choose...'">
                            </select>
                        </div>
                    </div>
                    <div class="control-group">
                        <label class="control-label" for="template">Template</label>
                        <div class="controls" data-bind="with: template">
                            <select data-rel="chosen" data-bind="
                                options: $parents[1].availableTemplates,
                                optionsText: 'name',
                                optionsValue: 'id',
                                value: id,
                                optionsCaption: 'Choose...'">
                            </select>
                        </div>
                    </div>
                    <div data-bind="template: {name:'block-template', foreach:pageBlocks}"></div>
                </form>
            </div>
            <div id="template-source" style="display:table-cell; width:70%">
                <pre style="font-family: monospace;">
                    <code>
                    </code>
                </pre>
            </div>
        </div>
        <div class="clear"></div>
        <div>
            <a id="add-block-button" class="btn btn-success" href="javascript:;" data-bind="click: savePage"><i class="icon-plus-sign icon-white"></i>Add</a>
        </div>
    </div>
    <script type="text/html" id="block-template">
        <div class="control-group">
            <label class="control-label" for="template" data-bind="text: title"></label>
            <div class="controls">
                <textarea data-bind="value: content" class="autogrow"></textarea>
            </div>
        </div>
    </script>
{% endblock %}

{% block js %}
    {{ parent() }}
    <script>
        var Page = function(data) {
            var self = this;
            self.name = ko.observable();
            self.uri = ko.observable();
            self.parent = ko.observable({id: null});
            self.template = ko.observable({id: ko.observable()});
            self.pageBlocks = ko.observableArray();

            if (data) {
                self.update(data);
            }

            self.template().id.subscribe(function(newId) {
                if (newId) {
                    $.ajax({
                        type: 'GET',
                        url: '{{ path('admin_get_complete_template', {'id': 0}) }}'.replace('0', newId)
                    })
                    .done(function(response){
                        $('#template-source pre code').text(response);
                        $('pre code').each(function(i, e) {hljs.highlightBlock(e)});

                        var blockTitleRegExp = new RegExp("{" + "{\\s([A-Z]+)[|\\sa-zA-z]*}}", 'g')
                        while (match = blockTitleRegExp.exec(response)) {
                            self.pageBlocks.push({title: match[1], content: match[1]});
                        }
                    })
                }
            });
        }

        Page.prototype.update = function(data) {
            this.name(data.name);
            this.uri(data.uri);
            this.parent(data.parent)
            this.template(data.template);
            this.pageBlocks(data.pageBlocks);
        };

        var PageModel = function(data) {
            var self = this;

            self.page = ko.observable();
            self.page(new Page(data));

            self.savePage = function() {
                $.ajax({
                    type: 'POST',
                    url: '{{ path('admin_save_page') }}',
                    data: ko.toJSON(self.page())
                });
            };

            self.availableParents = ko.observableArray([
                {id: 1, name: 'Main'}, {id: 2, name: 'News'}, {id: 3, name: 'News First'}
            ]);

            self.availableTemplates = ko.observableArray([
                {id: 1, name: 'Main'}, {id: 2, name: 'Uris'}
            ]);


        };

        var pageModel = new PageModel();
        ko.applyBindings(pageModel);

    </script>
{% endblock %}