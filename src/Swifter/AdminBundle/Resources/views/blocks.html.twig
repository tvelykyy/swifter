{% extends "SwifterAdminBundle::loggedin_skeleton.html.twig" %}

{%  block main_content %}
    <div class="box-content">
        <table class="table table-striped">
            <thead>
            <tr>
                <th>Id</th>
                <th>Title</th>
                <th>Actions</th>
            </tr>
            </thead>
            <tbody data-bind="foreach: blocks">
            <tr>
                <td data-bind="text: id"></td>
                <td data-bind="text: title" class="center"></td>
                <td>
                    <a data-bind="click: $parent.editBlock" class="btn btn-info edit" href="javascript:;"><i class="icon-edit icon-white"></i>Edit</a>
                    <a data-bind="click: $parent.deleteBlock" class="btn btn-danger delete" href="javascript:;"><i class="icon-trash icon-white"></i>Delete</a>
                </td>
            </tr>
            </tbody>
        </table>
        <a id="add-block-button" data-bind="click: clearAndShowModalDialog" class="btn btn-success" href="javascript:;"><i class="icon-plus-sign icon-white"></i>Add</a>
    </div>

    <div class="modal hide fade" id="myModal">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">Ã—</button>
            <h3>Add Block</h3>
        </div>
        <div class="modal-body" data-bind="with: editingBlock">
            <form id= "save-block-form" class="form-horizontal">
                <fieldset>
                    <input name="id" type="hidden" type="text" data-bind="value: id">
                    <div field="title" class="control-group">
                        <label class="control-label" for="title">Block Title</label>
                        <div class="controls">
                            <input name="title" id="title" class="input-xlarge focused" type="text" data-bind="value: title">
                            <span class="help-inline"></span>
                        </div>
                    </div>
                </fieldset>
            </form>
        </div>
        <div class="modal-footer">
            <a href="javascript:;" class="btn" data-dismiss="modal">Close</a>
            <a id="save-block-btn" data-bind="click: saveBlock" href="javascript:;" class="btn btn-success">Save changes</a>
        </div>
    </div>
{% endblock %}

{% block js %}
    {{ parent() }}
    <script>
        var Block = function(data) {
            this.id = ko.observable();
            this.title = ko.observable();

            if (data) {
                this.update(data);
            }
        }

        Block.prototype.update = function(data) {
            this.id(data.id);
            this.title(data.title);
        };

        var BlockModel = function(blocks) {
            var self = this;

            self.blocks = ko.observableArray(ko.utils.arrayMap(blocks, function(data) {
                return new Block(data);
            }));

            self.selectedBlock = ko.observable();

            self.editingBlock = ko.observable();
            self.editingBlock(new Block());

            self.clearModalDialog = function() {
                self.editingBlock(new Block());
                self.selectedBlock(new Block());
            };

            self.clearAndShowModalDialog = function() {
                self.clearModalDialog();
                $('#myModal').modal('show');
            };

            self.saveBlock = function() {
                blockingUIAjax({
                    type: 'POST',
                    url: '{{ path('admin_save_block') }}',
                    data: ko.toJSON(self.editingBlock())
                }, function(data) {
                    $('#myModal').modal('hide');
                    var selected = self.selectedBlock();
                    var edited = ko.toJS(self.editingBlock()); //clean copy of edited

                    //apply updates from the edited item to the selected item
                    selected.update(edited);
                    if (!selected.id()) {
                        selected.id(data);
                        self.blocks.push(selected);
                    }
                }, function(data) {
                    var errors = JSON.parse(data.responseText);
                    $.each(errors, function(index, error) {
                        $('[field=' + error.field + ']')
                                .addClass('error')
                                .find('.help-inline')
                                .text(error.message);
                    })
                });
            };

            self.deleteBlock = function(block) {
                if (confirm('Sure?')) {
                    blockingUIAjax({
                        type: 'DELETE',
                        url: '{{ path('admin_delete_block', {'id': 0}) }}'.replace('0', block.id())
                    }, function() {
                        self.blocks.remove(block);
                    });
                }
            };

            self.editBlock = function(block) {
                self.selectedBlock(block);
                self.editingBlock(new Block(ko.toJS(block)))

                $('#myModal').modal('show');
            };
        };

        $.get('{{ path('admin_get_blocks') }}')
            .done(function( data ) {
                ko.applyBindings(new BlockModel(data));
            })
            .always(function() {
                unblockUI();
            });
    </script>
{% endblock %}
