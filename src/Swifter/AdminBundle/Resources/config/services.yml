parameters:
    admin.service.response.class:         Swifter\AdminBundle\Service\ResponseService
    admin.service.serialization.class:    Swifter\AdminBundle\Service\SerializationService
    admin.controller.login.class:         Swifter\AdminBundle\Controller\LoginController
    admin.controller.landing.class:       Swifter\AdminBundle\Controller\LandingController
    admin.controller.blocks.class:        Swifter\AdminBundle\Controller\BlocksController
    admin.controller.pages.class:         Swifter\AdminBundle\Controller\PagesController
    admin.controller.templates.class:    Swifter\AdminBundle\Controller\TemplatesController

services:
    admin.service.response:
        class: %admin.service.response.class%

    admin.service.serialization:
        class: %admin.service.serialization.class%
        arguments: ["@service_container"]

    admin.controller.templates:
        class: %admin.controller.templates.class%
        arguments: ["@common.service.template", "@admin.service.response"]
        calls:
            -  [setContainer, ["@service_container"]]

    admin.controller.login:
        class: %admin.controller.login.class%
        calls:
            -  [setContainer, ["@service_container"]]

    admin.controller.landing:
        class: %admin.controller.landing.class%
        calls:
            -  [setContainer, ["@service_container"]]

    admin.controller.blocks:
        class: %admin.controller.blocks.class%
        arguments: ["@admin.service.response", "@admin.service.serialization"]
        calls:
            -  [setContainer, ["@service_container"]]

    admin.controller.pages:
        class: %admin.controller.pages.class%
        arguments: ["@admin.service.response", "@admin.service.serialization", "@common.service.pageBlock"]
        calls:
            -  [setContainer, ["@service_container"]]

